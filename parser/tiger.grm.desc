86 shift/reduce conflicts

error:  state 25: shift/reduce conflict (shift LBRACK, reduce by rule 69)
error:  state 60: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift GE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift GT, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift LE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift LT, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift NEQ, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift EQ, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift PLUS, reduce by rule 38)
error:  state 63: shift/reduce conflict (shift OR, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift AND, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift GE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift GT, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift LE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift LT, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift NEQ, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift EQ, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift DIVIDE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift TIMES, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift MINUS, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift PLUS, reduce by rule 3)
error:  state 89: shift/reduce conflict (shift OR, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 42)
error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 41)
error:  state 121: shift/reduce conflict (shift OR, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 40)
error:  state 123: shift/reduce conflict (shift OR, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 39)
error:  state 135: shift/reduce conflict (shift OR, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift AND, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift GE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift GT, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift LE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift LT, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift NEQ, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift EQ, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift DIVIDE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift TIMES, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift MINUS, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift PLUS, reduce by rule 43)

state 0:

	program : . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 14
	program	goto 137
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 1:

	exp : record .  (reduce by rule 4)



	.	reduce by rule 4


state 2:

	exp : assignment .  (reduce by rule 7)



	.	reduce by rule 7


state 3:

	exp : negexp .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	exp : letstm .  (reduce by rule 13)



	.	reduce by rule 13


state 5:

	exp : forstm .  (reduce by rule 12)



	.	reduce by rule 12


state 6:

	exp : whilestm .  (reduce by rule 11)



	.	reduce by rule 11


state 7:

	exp : ifthen .  (reduce by rule 10)



	.	reduce by rule 10


state 8:

	exp : ifthenelse .  (reduce by rule 9)



	.	reduce by rule 9


state 9:

	exp : arraystm .  (reduce by rule 8)



	.	reduce by rule 8


state 10:

	exp : functionstm .  (reduce by rule 6)



	.	reduce by rule 6


state 11:

	exp : sequence .  (reduce by rule 5)



	.	reduce by rule 5


state 12:

	exp : literal .  (reduce by rule 1)



	.	reduce by rule 1


state 13:

	exp : lvalue .  (reduce by rule 17)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 28
	DOT	shift 27
	ASSIGN	shift 26


	.	reduce by rule 17


state 14:

	exp : exp . op exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 0


state 15:

	exp : NIL .  (reduce by rule 15)



	.	reduce by rule 15


state 16:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 17:

	letstm : LET . decs IN explistsemi END 
	letstm : LET . decs IN END 

	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	decs	goto 46
	dec	goto 45
	tydec	goto 44
	vardec	goto 43
	fundec	goto 42

	.	error


state 18:

	forstm : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 50


	.	error


state 19:

	whilestm : WHILE . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 51
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 20:

	ifthenelse : IF . exp THEN exp ELSE exp 
	ifthen : IF . exp THEN exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 52
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 21:

	negexp : MINUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 53
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 22:

	exp : LPAREN . RPAREN 
	sequence : LPAREN . explistsemi RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	RPAREN	shift 56
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 55
	lvalue	goto 13
	explistsemi	goto 54
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 23:

	literal : STRING .  (reduce by rule 30)



	.	reduce by rule 30


state 24:

	literal : INT .  (reduce by rule 31)



	.	reduce by rule 31

error:  state 25: shift/reduce conflict (shift LBRACK, reduce by rule 69)

state 25:

	lvalue : ID .  (reduce by rule 69)
	functionstm : ID . LPAREN RPAREN 
	functionstm : ID . LPAREN explistcomma RPAREN 
	arraystm : ID . LBRACK exp RBRACK OF exp 
	record : ID . LBRACE RBRACE 
	record : ID . LBRACE typelist RBRACE 

	LPAREN	shift 59
	LBRACK	shift 58
	LBRACE	shift 57


	.	reduce by rule 69


state 26:

	assignment : lvalue ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 60
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 27:

	lvalue : lvalue DOT . ID 

	ID	shift 61


	.	error


state 28:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 62
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 29:

	exp : exp op . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 63
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 30:

	op : OR .  (reduce by rule 23)



	.	reduce by rule 23


state 31:

	op : AND .  (reduce by rule 22)



	.	reduce by rule 22


state 32:

	op : GE .  (reduce by rule 26)



	.	reduce by rule 26


state 33:

	op : GT .  (reduce by rule 28)



	.	reduce by rule 28


state 34:

	op : LE .  (reduce by rule 27)



	.	reduce by rule 27


state 35:

	op : LT .  (reduce by rule 29)



	.	reduce by rule 29


state 36:

	op : NEQ .  (reduce by rule 25)



	.	reduce by rule 25


state 37:

	op : EQ .  (reduce by rule 24)



	.	reduce by rule 24


state 38:

	op : DIVIDE .  (reduce by rule 21)



	.	reduce by rule 21


state 39:

	op : TIMES .  (reduce by rule 20)



	.	reduce by rule 20


state 40:

	op : MINUS .  (reduce by rule 19)



	.	reduce by rule 19


state 41:

	op : PLUS .  (reduce by rule 18)



	.	reduce by rule 18


state 42:

	dec : fundec .  (reduce by rule 56)



	.	reduce by rule 56


state 43:

	dec : vardec .  (reduce by rule 55)



	.	reduce by rule 55


state 44:

	dec : tydec .  (reduce by rule 54)



	.	reduce by rule 54


state 45:

	decs : dec .  (reduce by rule 52)



	.	reduce by rule 52


state 46:

	decs : decs . dec 
	letstm : LET decs . IN explistsemi END 
	letstm : LET decs . IN END 

	IN	shift 65
	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	dec	goto 64
	tydec	goto 44
	vardec	goto 43
	fundec	goto 42

	.	error


state 47:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 48:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 49:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN ASSIGN EQ exp 

	ID	shift 68


	.	error


state 50:

	forstm : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 51:

	exp : exp . op exp 
	whilestm : WHILE exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 70

	op	goto 29

	.	error


state 52:

	exp : exp . op exp 
	ifthenelse : IF exp . THEN exp ELSE exp 
	ifthen : IF exp . THEN exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 71

	op	goto 29

	.	error


state 53:

	exp : exp . op exp 
	negexp : MINUS exp .  (reduce by rule 34)


	op	goto 29

	.	reduce by rule 34


state 54:

	explistsemi : explistsemi . SEMICOLON exp 
	sequence : LPAREN explistsemi . RPAREN 

	SEMICOLON	shift 73
	RPAREN	shift 72


	.	error


state 55:

	exp : exp . op exp 
	explistsemi : exp .  (reduce by rule 48)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 48


state 56:

	exp : LPAREN RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 57:

	record : ID LBRACE . RBRACE 
	record : ID LBRACE . typelist RBRACE 

	ID	shift 76
	RBRACE	shift 75

	typelist	goto 74

	.	error


state 58:

	arraystm : ID LBRACK . exp RBRACK OF exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 77
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 59:

	functionstm : ID LPAREN . RPAREN 
	functionstm : ID LPAREN . explistcomma RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	RPAREN	shift 80
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 79
	lvalue	goto 13
	explistcomma	goto 78
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error

error:  state 60: shift/reduce conflict (shift OR, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift AND, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift GE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift GT, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift LE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift LT, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift NEQ, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift EQ, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift DIVIDE, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift TIMES, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift MINUS, reduce by rule 38)
error:  state 60: shift/reduce conflict (shift PLUS, reduce by rule 38)

state 60:

	exp : exp . op exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 38)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 38


state 61:

	lvalue : lvalue DOT ID .  (reduce by rule 70)



	.	reduce by rule 70


state 62:

	exp : exp . op exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 81
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	error

error:  state 63: shift/reduce conflict (shift OR, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift AND, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift GE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift GT, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift LE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift LT, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift NEQ, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift EQ, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift DIVIDE, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift TIMES, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift MINUS, reduce by rule 3)
error:  state 63: shift/reduce conflict (shift PLUS, reduce by rule 3)

state 63:

	exp : exp . op exp 
	exp : exp op exp .  (reduce by rule 3)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 3


state 64:

	decs : decs dec .  (reduce by rule 53)



	.	reduce by rule 53


state 65:

	letstm : LET decs IN . explistsemi END 
	letstm : LET decs IN . END 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	END	shift 83
	BREAK	shift 16
	NIL	shift 15

	exp	goto 55
	lvalue	goto 13
	explistsemi	goto 82
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN ASSIGN EQ exp 

	LPAREN	shift 87


	.	error


state 69:

	forstm : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 88
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 70:

	whilestm : WHILE exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 89
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 71:

	ifthenelse : IF exp THEN . exp ELSE exp 
	ifthen : IF exp THEN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 90
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 72:

	sequence : LPAREN explistsemi RPAREN .  (reduce by rule 35)



	.	reduce by rule 35


state 73:

	explistsemi : explistsemi SEMICOLON . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 91
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 74:

	typelist : typelist . COMMA ID EQ exp 
	record : ID LBRACE typelist . RBRACE 

	COMMA	shift 93
	RBRACE	shift 92


	.	error


state 75:

	record : ID LBRACE RBRACE .  (reduce by rule 32)



	.	reduce by rule 32


state 76:

	typelist : ID . EQ exp 

	EQ	shift 94


	.	error


state 77:

	exp : exp . op exp 
	arraystm : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 95
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	error


state 78:

	explistcomma : explistcomma . SEMICOLON exp 
	functionstm : ID LPAREN explistcomma . RPAREN 

	SEMICOLON	shift 97
	RPAREN	shift 96


	.	error


state 79:

	exp : exp . op exp 
	explistcomma : exp .  (reduce by rule 50)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 50


state 80:

	functionstm : ID LPAREN RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 81:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 71)



	.	reduce by rule 71


state 82:

	explistsemi : explistsemi . SEMICOLON exp 
	letstm : LET decs IN explistsemi . END 

	SEMICOLON	shift 73
	END	shift 98


	.	error


state 83:

	letstm : LET decs IN END .  (reduce by rule 45)



	.	reduce by rule 45


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 102
	LBRACE	shift 101
	ARRAY	shift 100

	ty	goto 99

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 103
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 104


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN ASSIGN EQ exp 

	ID	shift 107

	tyfields	goto 106
	tyfield	goto 105

	.	reduce by rule 61


state 88:

	exp : exp . op exp 
	forstm : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 108

	op	goto 29

	.	error

error:  state 89: shift/reduce conflict (shift OR, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift AND, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift GE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift GT, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift LE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift LT, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift NEQ, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift EQ, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift DIVIDE, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift TIMES, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift MINUS, reduce by rule 42)
error:  state 89: shift/reduce conflict (shift PLUS, reduce by rule 42)

state 89:

	exp : exp . op exp 
	whilestm : WHILE exp DO exp .  (reduce by rule 42)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 42

error:  state 90: shift/reduce conflict (shift ELSE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift OR, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift AND, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift GE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift GT, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift LE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift LT, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift NEQ, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift EQ, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift DIVIDE, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift TIMES, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift MINUS, reduce by rule 41)
error:  state 90: shift/reduce conflict (shift PLUS, reduce by rule 41)

state 90:

	exp : exp . op exp 
	ifthenelse : IF exp THEN exp . ELSE exp 
	ifthen : IF exp THEN exp .  (reduce by rule 41)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 109

	op	goto 29

	.	reduce by rule 41


state 91:

	exp : exp . op exp 
	explistsemi : explistsemi SEMICOLON exp .  (reduce by rule 49)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 49


state 92:

	record : ID LBRACE typelist RBRACE .  (reduce by rule 33)



	.	reduce by rule 33


state 93:

	typelist : typelist COMMA . ID EQ exp 

	ID	shift 110


	.	error


state 94:

	typelist : ID EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 111
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 95:

	arraystm : ID LBRACK exp RBRACK . OF exp 

	OF	shift 112


	.	error


state 96:

	functionstm : ID LPAREN explistcomma RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 97:

	explistcomma : explistcomma SEMICOLON . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 113
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 98:

	letstm : LET decs IN explistsemi END .  (reduce by rule 44)



	.	reduce by rule 44


state 99:

	tydec : TYPE ID EQ ty .  (reduce by rule 57)



	.	reduce by rule 57


state 100:

	ty : ARRAY . OF ID 

	OF	shift 114


	.	error


state 101:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 107

	tyfields	goto 115
	tyfield	goto 105

	.	reduce by rule 61


state 102:

	ty : ID .  (reduce by rule 58)



	.	reduce by rule 58


state 103:

	exp : exp . op exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 65)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 65


state 104:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 116


	.	error


state 105:

	tyfields : tyfield .  (reduce by rule 62)



	.	reduce by rule 62


state 106:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN ASSIGN EQ exp 
	tyfields : tyfields . COMMA tyfield 

	COMMA	shift 118
	RPAREN	shift 117


	.	error


state 107:

	tyfield : ID . COLON ID 

	COLON	shift 119


	.	error


state 108:

	forstm : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 120
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 109:

	ifthenelse : IF exp THEN exp ELSE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 121
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 110:

	typelist : typelist COMMA ID . EQ exp 

	EQ	shift 122


	.	error


state 111:

	exp : exp . op exp 
	typelist : ID EQ exp .  (reduce by rule 46)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 46


state 112:

	arraystm : ID LBRACK exp RBRACK OF . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 123
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 113:

	exp : exp . op exp 
	explistcomma : explistcomma SEMICOLON exp .  (reduce by rule 51)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 51


state 114:

	ty : ARRAY OF . ID 

	ID	shift 124


	.	error


state 115:

	ty : LBRACE tyfields . RBRACE 
	tyfields : tyfields . COMMA tyfield 

	COMMA	shift 118
	RBRACE	shift 125


	.	error


state 116:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 126
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 117:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . ASSIGN EQ exp 

	EQ	shift 128
	ASSIGN	shift 127


	.	error


state 118:

	tyfields : tyfields COMMA . tyfield 

	ID	shift 107

	tyfield	goto 129

	.	error


state 119:

	tyfield : ID COLON . ID 

	ID	shift 130


	.	error


state 120:

	exp : exp . op exp 
	forstm : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 131

	op	goto 29

	.	error

error:  state 121: shift/reduce conflict (shift OR, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 40)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 40)

state 121:

	exp : exp . op exp 
	ifthenelse : IF exp THEN exp ELSE exp .  (reduce by rule 40)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 40


state 122:

	typelist : typelist COMMA ID EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 132
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error

error:  state 123: shift/reduce conflict (shift OR, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift AND, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift GE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift GT, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift LE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift LT, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift NEQ, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift EQ, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift DIVIDE, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift TIMES, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift MINUS, reduce by rule 39)
error:  state 123: shift/reduce conflict (shift PLUS, reduce by rule 39)

state 123:

	exp : exp . op exp 
	arraystm : ID LBRACK exp RBRACK OF exp .  (reduce by rule 39)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 39


state 124:

	ty : ARRAY OF ID .  (reduce by rule 60)



	.	reduce by rule 60


state 125:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 59)



	.	reduce by rule 59


state 126:

	exp : exp . op exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 66)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 66


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN ASSIGN . EQ exp 

	EQ	shift 133


	.	error


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 134
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 129:

	tyfields : tyfields COMMA tyfield .  (reduce by rule 63)



	.	reduce by rule 63


state 130:

	tyfield : ID COLON ID .  (reduce by rule 64)



	.	reduce by rule 64


state 131:

	forstm : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 135
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 132:

	exp : exp . op exp 
	typelist : typelist COMMA ID EQ exp .  (reduce by rule 47)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 47


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN ASSIGN EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	MINUS	shift 21
	IF	shift 20
	WHILE	shift 19
	FOR	shift 18
	LET	shift 17
	BREAK	shift 16
	NIL	shift 15

	exp	goto 136
	lvalue	goto 13
	literal	goto 12
	sequence	goto 11
	functionstm	goto 10
	arraystm	goto 9
	ifthenelse	goto 8
	ifthen	goto 7
	whilestm	goto 6
	forstm	goto 5
	letstm	goto 4
	negexp	goto 3
	assignment	goto 2
	record	goto 1

	.	error


state 134:

	exp : exp . op exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 67)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 67

error:  state 135: shift/reduce conflict (shift OR, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift AND, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift GE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift GT, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift LE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift LT, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift NEQ, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift EQ, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift DIVIDE, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift TIMES, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift MINUS, reduce by rule 43)
error:  state 135: shift/reduce conflict (shift PLUS, reduce by rule 43)

state 135:

	exp : exp . op exp 
	forstm : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 43)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 43


state 136:

	exp : exp . op exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN ASSIGN EQ exp .  (reduce by rule 68)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30

	op	goto 29

	.	reduce by rule 68


state 137:


	EOF	accept


	.	error

398 of 779 action table entries left after compaction
409 goto table entries
